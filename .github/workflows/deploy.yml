name: Create release

on:
  pull_request:
    branches:
      - main
    types: [closed]
  workflow_dispatch:
jobs:
  check-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Check if main branch
        run: |
          if [[ "${{ github.ref }}" != "refs/heads/main" ]]; then
            echo "This workflow can only be run on the main branch."
            exit 1
          fi
  determine-version:
    needs: check-branch
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0
  build:
    name: build ${{ needs.determine-version.outputs.semVer }}
    runs-on: ubuntu-latest
    needs: determine-version
    env:
      SEMVER: ${{ needs.determine-version.outputs.semVer }}
      ASSET_NAME: GoodGame.Eco.Civics-${{ needs.determine-version.outputs.semVer }}
      BUNDLE_PATH: ./src/civics.json
      ARTIFACT_OUTPUT: ./build-assets
    outputs:
      assetName: ${{ env.ASSET_NAME }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Create Asset
        run: |
          mkdir "${{ env.ARTIFACT_OUTPUT }}"
          cp "${{ env.BUNDLE_PATH }}" "${{ env.ARTIFACT_OUTPUT }}/civics.json"      
      - name: Upload package
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ASSET_NAME }}
          path: ${{ env.ARTIFACT_OUTPUT }}
  release:
    runs-on: ubuntu-latest
    needs:
      - determine-version
      - build
    name: release ${{ needs.determine-version.outputs.semVer }}
    permissions:
      contents: write
    env:
      SEMVER: ${{ needs.determine-version.outputs.semVer }}
      ASSET_NAME: ${{ needs.build.outputs.assetName }}
    steps:
      - uses: actions/checkout@v3  
        with:
          fetch-depth: 0
      - run: echo "CURRENT_VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo '')" >> $GITHUB_ENV
      - name: Download package
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.ASSET_NAME }}
      - name: Generate changelog
        id: changelog
        uses: jaywcjlove/changelog-generator@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filter-author: (jcdcdev|dependabot|renovate\\[bot\\]|dependabot\\[bot\\]|Renovate Bot)
          filter: '(\+semver:\s?(breaking|major|feature|minor|fix|patch)|\+changelog-ignore:.*)'
          custom-emoji: 'feature🌟,demographic👥,districtmap🗺️,electedtitle👑,electionprocess🗳️,constitution📜,govaccount🏦,law⚖️'
      - name: Get the changelog
        run: echo "${{ steps.changelog.outputs.changelog }}"
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: civics.json
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.SEMVER }}
          tag: ${{ env.SEMVER }}
          body: |
            Compare https://github.com/${{ github.repository }}/compare/${{ env.CURRENT_VERSION }}...${{env.SEMVER}}

            ${{ steps.changelog.outputs.changelog }}
